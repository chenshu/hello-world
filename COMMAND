git init
git add COMMAND
git commit 
git commit -m "init COMMAND file"
git commit -a -m "skip staged area"
git commit --amend
git status
git diff
git diff --staged
git rm abc
git rm -f abc
git rm --cached abc
git mv abc def
git log
git log -p
git log -2
git log --stat
git log --pretty=oneline
git log --pretty=format:"%h - %an, %ar : %s"
git log --pretty=format:"%h %s" --graph
git log --since --until --author --grep --all-match
-(n) 仅显示最近的 n 条提交
-p 按补丁格式显示每个更新之间的差异。
--since, --after 仅显示指定时间之后的提交。
--until, --before 仅显示指定时间之前的提交。
--author 仅显示指定作者相关的提交。
--no-merges 未合并的提交。
--committer 仅显示指定提交者相关的提交。
--stat 显示每次更新的文件修改统计信息。
--shortstat 只显示 --stat 中最后的行数修改添加移除统计。
--name-only 仅在提交信息后显示已修改的文件清单。
--name-status 显示新增、修改、删除的文件清单。
--abbrev-commit 仅显示 SHA-1 的前几个字符,而非所有的 40 个字符。
--relative-date 使用较短的相对时间显示(比如,“2 weeks ago”)。
--graph 显示 ASCII 图形表示的分支合并历史。
--pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline,short,full,fuller 和 format(后跟指 定格式)。
%H 提交对象(commit)的完整哈希字串 %h 提交对象的简短哈希字串
%T 树对象(tree)的完整哈希字串
%t 树对象的简短哈希字串
%P 父对象(parent)的完整哈希字串 %p 父对象的简短哈希字串
%an 作者(author)的名字
%ae 作者的电子邮件地址
%ad 作者修订日期(可以用 -date= 选项定制格式) %ar 作者修订日期,按多久以前的方式显示
%cn 提交者(committer)的名字
%ce 提交者的电子邮件地址
%cd 提交日期
%cr 提交日期,按多久以前的方式显示
%s 提交说明
git reset HEAD COMMAND
git checkout -- COMMAND
git remote
git remote add fc git://github.com/fredchen/hello-world.git
git remote show origin
git remote rename pb paul
git remote rm paul
git fetch fc
git fetch origin
git merge origin master
git merge hotfix
git pull
git push origin master
git branch
git branch --merge
git branch --no-merged
git branch testing
git checkout testing
git checkout -b testing === git branch testing; git checkout testing
git checkout -b iss origin/iss === git checkout --track origin/iss
git branch -d hotfix
git push origin :iss
git rebase master
git rebase --onto master server client
git rebase master server
